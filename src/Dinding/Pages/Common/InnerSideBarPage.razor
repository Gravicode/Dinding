@inject UserProfileService service

<div class="col-md-3 col-sm-4 col-xs-12">
    <div id="leftcol_item">
        <div class="user_dashboard_pic"> <img alt="user photo" src="@(DataUser?.PicUrl==null ? "images/user-profile.png" : DataUser.PicUrl)"> </div>
    </div>
    <div class="dashboard_nav_item">
        <ul>
            <li><a href="dashboard"><i class="fa fa-tachometer"></i> Dashboard</a></li>
            <li><a href="listing_submit"><i class="fa fa-pencil"></i> Submit Listing</a></li>
            <li><a href="edit_profile"><i class="fa fa-user"></i> Edit Profile</a></li>
            <li><a href="my_listing"><i class="fa fa-list-ul"></i> My Listing</a></li>
            <li class="active"><a href="change_password"><i class="fa fa-key"></i> Change Password</a></li>
            <li><a href="/logout"><i class="fa fa-sign-out"></i> Logout</a></li>
        </ul>
    </div>
</div>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;
    UserProfile DataUser = new UserProfile();
    protected override async Task OnInitializedAsync()
    {
        
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            DataUser = service.GetItemByUsername(UserName);
           
        }


    }
}
