@using Dinding.Data
@using Dinding.Tools
@inject IJSRuntime IJS
@page "/forgot-password"
@inject IToastService toastService


<div class="modal fade" id="forgot-password" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="listing-modal-1 modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel"> Forgot Password</h4>
            </div>
            <div class="modal-body">
                <div class="listing-login-form">
                    <div>
                        <div class="listing-form-field">
                            <i class="fa fa-user blue-1"></i>
                            <input class="form-field bgwhite" @bind="Email" type="email" name="email" placeholder="Email" />
                        </div>
                        <div class="listing-form-field">
                            <i class="fa fa-lock blue-1"></i>
                            <input class="form-field bgwhite" @bind="Phone" type="tel" name="phone" placeholder="Phone" />
                        </div>

                        <div class="listing-form-field">
                            <input class="submit" type="button" @onclick="KirimPassword" value="Send Password" />
                            <input class="submit" type="button" @onclick="Tutup" value="Close" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string Phone { get; set; }
    public string Email { get; set; }
    async Task Tutup()
    {
        await IJS.InvokeVoidAsync("CloseModal", "forgot-password");
    }
    async Task KirimPassword()
    {
        bool IsSuccess = false;
        UserProfileService svc = new UserProfileService();
        var enc = new Encryption();
        string Error = string.Empty;

        if (string.IsNullOrEmpty(Email) && string.IsNullOrEmpty(Phone))
        {
            toastService.ShowError("Email atau no hp harus di isi.");
            return;
        }
        if (!string.IsNullOrEmpty(Email))
        {
            var item = svc.GetItemByEmail(Email);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);
                await MailService.PostmarkSendEmail("Dinding - Forget Password", $"Password Anda adalah {pass}", Email, false);
                toastService.ShowSuccess("Info password sudah di kirim ke email Anda");
                IsSuccess = true;
                await Tutup();
            }
            else
            {
                toastService.ShowError("Email tidak terdaftar.");
            }
        }

        if (!string.IsNullOrEmpty(Phone))
        {
            var item = svc.GetItemByPhone(Phone);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);

                await SmsService.SendSms($"[Dinding] -> Password Anda adalah {pass}", item.Phone);
                toastService.ShowSuccess("Info password sudah di kirim ke hp Anda");
                IsSuccess = true;
                await Tutup();
            }
            else
            {
                toastService.ShowError("No HP tidak terdaftar.");
            }
        }

    }
}
